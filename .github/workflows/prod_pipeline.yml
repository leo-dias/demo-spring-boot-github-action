name: 03 - CI/CD Pipeline for Master Branch

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'The type of version change: major, minor, patch'
        required: true

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
  
env:
  MAVEN_CLI_OPTS: "-B -V"

jobs:
  rebase_master:
    runs-on: ubuntu-latest
#    environment: 'REBASE_PROD'
    permissions: write-all

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Needed for rebasing

      - name: Rebase master branch
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git checkout uat
          git pull
          git checkout master
          git pull
          git rebase uat
        env:
          GIT_TOKEN: ${{ secrets.MY_OTHER_TOKEN }}

      - name: Push changes to master
        run: |
          git push origin master
        env:
          GIT_TOKEN: ${{ secrets.MY_OTHER_TOKEN }}

  create_tag:
    needs: rebase_master
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v2
      - name: Bump version and push tag
        run: |
          CUR_TAG=$(git describe --abbrev=0 --tags);
        
          IFS='.' read -a vers <<< "$CUR_TAG"
          
          MAJ=${vers[0]}
          MIN=${vers[1]}
          PATCH=${vers[2]}

          echo "Current Tag: $MAJ.$MIN.$PATCH"
            
          for cmd in "$@"
          do
            case $cmd in
              "major")
                ((MAJ+=1))
                MIN=0
                PATCH=0
                echo "Incrementing Major Version"
              ;;
              "minor")
              ((MIN+=1))
                PATCH=0
                echo "Incrementing Minor Version"
              ;;
              "patch")
                ((PATCH+=1))
                echo "Incrementing Patch Version"
              ;;
            esac
          done
          
          NEW_TAG="$MAJ.$MIN.$PATCH"

          echo "Adding Tag: $NEW_TAG";
          git tag -a "$NEW_TAG" -m "$NEW_TAG"
          git push origin "$NEW_TAG"


  deploy_master:
    needs: create_tag
    runs-on: ubuntu-latest
    environment: 'DEPLOY_PROD'
    permissions: write-all

    steps:
      - uses: actions/checkout@v3

      - name: Deploy to prod
        run: echo "Deploying to prod"
